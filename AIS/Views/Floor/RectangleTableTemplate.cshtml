@model AISModels.FloorTable
@{
    var width = 0;
    var height = 0;
    var sideSeat = 0;
    var topSeat = 0;
    var bottomSeat = 0;
    var topbottomleftmargin = 0;
    var sidetopmargin = 0;

    var isSelected = ((ViewBag.IsSelected != null) ? (ViewBag.IsSelected) : false);
    var isTemporary = ((ViewBag.IsTemp != null) ? (ViewBag.IsTemp) : false);
    var isServerAvailable = (Model.FloorTableServer != null
        && Model.FloorTableServer.Server != null
        && (Model.FloorTableServer.Server.DesignationId.HasValue
            && Model.FloorTableServer.Server.Designation.IsAssignable)
            && (Model.FloorTableServer.Server.Availability.HasValue
                && Model.FloorTableServer.Server.Availability == true));

    switch (Model.Size.ToLower())
    {

        case "small":
            {
                width = 55;
                height = 35;
                topSeat = 1;
                bottomSeat = 1;
                topbottomleftmargin = (((width + 4) - 20) / 4);
                sidetopmargin = ((height - 20) / 2);
                break;
            }
        case "medium":
            {
                width = 60;
                height = 40;
                topSeat = 2;
                bottomSeat = 2;
                topbottomleftmargin = (((width + 4) - 40) / 8);
                sidetopmargin = ((height - 20) / 2);
                break;
            }
        case "large":
            {
                width = 85;
                height = 55;
                sideSeat = 2;
                topSeat = 2;
                bottomSeat = 2;
                topbottomleftmargin = (((width + 16) - 40) / 4);
                sidetopmargin = ((height - 20) / 2);
                break;
            }
        default:
            break;

    }

    var TotalSeats = topSeat + bottomSeat + sideSeat;
}
<div id="@(Model.HtmlId)" class="table-main table" style="left: @(Model.TLeft); top: @(Model.TTop);">
    <div class="tblRotate" style="transform: rotate(@(Model.Angle)deg);">
        <div class="top-seat1">
            @for (var i = 0; i < topSeat; i++)
            {
                <div class="seat top-chair" style="float: left; margin-left: @((topbottomleftmargin == 0) ? "" : topbottomleftmargin.ToString())px;">
                </div>
            }
        </div>
        <div class="seat-mid-section">
            @if (sideSeat == 1)
            {
                <div class="seat l-seat left-chair" style="float:left;margin-top:@(sidetopmargin)px;">
                </div>
                <div onclick="EditTable(this);" class="quan-4-1 @(isSelected ? "secHover" : string.Empty)" style="position: relative;width:@(width)px; float:left;height: @(height)px; border:1px solid #979191;">
                    <div class="rotate" @(isSelected ? null : Html.Raw("style=\"display: none;\""))>
                        <a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateAnti"></a><a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateClock">
                        </a>
                    </div>
                    <h3 @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.TableName)</h3>
                    @if (isServerAvailable)
                    {
                        <span class="table-staff-right" style="background: @(Model.FloorTableServer.Server.StaffColor)"></span>
                    }
                    <p @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.MinCover)/@(Model.MaxCover)</p>
                </div>
            }
            else if (sideSeat == 2)
            {
                <div class="seat l-seat left-chair" style="float: left; margin-top: @(sidetopmargin)px;">
                </div>
                <div onclick="EditTable(this);" class="quan-4-1 @(isSelected ? "secHover" : string.Empty)" style="position: relative;width:@(width)px; float:left;height: @(height)px; border:1px solid #979191;">
                    <div class="rotate" @(isSelected ? null : Html.Raw("style=\"display: none;\""))>
                        <a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateAnti"></a><a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateClock">
                        </a>
                    </div>
                    <h3 @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.TableName)</h3>
                    @if (isServerAvailable)
                    {
                        <span class="table-staff-right" style="background: @(Model.FloorTableServer.Server.StaffColor)"></span>
                    }
                    <p @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.MinCover)/@(Model.MaxCover)</p>
                </div>
                <div class="seat r-seat right-chair" style="float: right; margin-top: @(sidetopmargin)px;">
                </div>
            }
            else
            {
                <div onclick="EditTable(this);" class="quan-4-1 @(isSelected ? "secHover" : string.Empty)" style="position: relative;width:@(width)px; float:left;height: @(height)px; border:1px solid #979191;">
                    <div class="rotate" @(isSelected ? null : Html.Raw("style=\"display: none;\""))>
                        <a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateAnti"></a><a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateClock">
                        </a>
                    </div>
                    <h3 @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.TableName)</h3>
                    @if (isServerAvailable)
                    {
                        <span class="table-staff-right" style="background: @(Model.FloorTableServer.Server.StaffColor)"></span>
                    }
                    <p @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.MinCover)/@(Model.MaxCover)</p>
                </div>
            }
        </div>
        <div class="bottom-seat1">
            @for (var j = 0; j < bottomSeat; j++)
            {
                <div class="seat bottom-chair" style="float: left; margin-left: @((topbottomleftmargin == 0) ? "" : topbottomleftmargin.ToString())px;">
                </div>
            }
        </div>
    </div>
    @using (Ajax.BeginForm(
        (isTemporary ? "UpdateTempItem" : "UpdateFloorItem"),
        "FloorItem",
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "{" +
                        "   console.log(data);" +
                        "   UpdateItemCounts(data.totalTables, data.totalMinCovers, data.totalMaxCovers);" +
                        "}"
        }))
    {
        @Html.HiddenFor(m => m.FloorTableId)
        @Html.HiddenFor(m => m.FloorPlanId)
        @Html.HiddenFor(m => m.SectionId)
        @Html.HiddenFor(m => m.TableName)
        @Html.HiddenFor(m => m.HtmlId)
        @Html.HiddenFor(m => m.Shape)
        @Html.HiddenFor(m => m.Size)
        @Html.HiddenFor(m => m.MinCover)
        @Html.HiddenFor(m => m.MaxCover)
        @Html.HiddenFor(m => m.Angle)
        @Html.HiddenFor(m => m.TTop)
        @Html.HiddenFor(m => m.TLeft)
        @Html.Hidden("IsTemporary", (Model.IsTemporary.HasValue ? Model.IsTemporary.Value : false))
    }
    @if (isServerAvailable)
    {
        <span class="tooltip_time-p">
            <div class="arrow-down">
            </div>
            @(Model.FloorTableServer.Server.FirstName + " " + Model.FloorTableServer.Server.LastName)<br>
        </span>
    }
</div>
