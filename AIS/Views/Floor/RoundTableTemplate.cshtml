@model AISModels.FloorTable
@{
    var radius = 0;
    var TotalSeats = 0;

    var isSelected = ((ViewBag.IsSelected != null) ? (ViewBag.IsSelected) : false);
    var isTemporary = ((ViewBag.IsTemp != null) ? (ViewBag.IsTemp) : false);
    var isServerAvailable = (Model.FloorTableServer != null
        && Model.FloorTableServer.Server != null
        && (Model.FloorTableServer.Server.DesignationId.HasValue
            && Model.FloorTableServer.Server.Designation.IsAssignable)
            && (Model.FloorTableServer.Server.Availability.HasValue
                && Model.FloorTableServer.Server.Availability == true));

    switch (Model.Size.ToLower())
    {

        case "small":
            {
                radius = 35 + 25;
                TotalSeats = 2;
                break;
            }
        case "medium":
            {
                radius = 55 + 25;
                TotalSeats = 4;
                break;
            }
        case "large":
            {
                radius = 75 + 25;
                TotalSeats = 6;
                break;
            }
        default:
            break;

    }

    var cx = 0;
    var cy = 0;
    cx = cy = (radius - 15) / 2;
    var angle = (360 / TotalSeats);
    var sumAngl = 0;
}
<div id="@(Model.HtmlId)" class="table-main" style="left: @(Model.TLeft); top: @(Model.TTop);">
    <div class="c-container tblRotate" style="height: @(radius + 3)px; width: @(radius + 3)px; transform: rotate(@(Model.Angle)deg);">
        <div style="height: @(radius - 24)px; width: @(radius - 24)px; left: 8px; top: 14px;" class="quan-2-1 table @(isSelected ? "secHover" : string.Empty)"
             onclick="EditTable(this);">
            <div class="rotate" @(isSelected ? null : Html.Raw("style=\"display: none;\""))>
                <a class="rotateAnti" href="javascript:void(0);" title="@(Model.HtmlId)"></a><a class="rotateClock"
                                                                                                href="javascript:void(0);" title="@(Model.HtmlId)"></a>
            </div>
            <h3 class="quan-2-h" @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.TableName)</h3>
            @if (isServerAvailable)
            {
                <span class="table-staff-right" style="background: @(Model.FloorTableServer.Server.StaffColor)"></span>
            }
            <p class="quan-2-p" @(TotalSeats > 2 ? null : Html.Raw("style='font-size: 10px;'"))>@(Model.MinCover)/@(Model.MaxCover)</p>
        </div>
        @for (int n = 0; n < TotalSeats; n++)
        {
            var x = Convert.ToInt32(cx + (cx * Math.Cos(sumAngl * Math.PI / 180)));
            var y = Convert.ToInt32(cx + (cx * Math.Sin(sumAngl * Math.PI / 180)));

            <div class="seat right-chair seat@(n)" style="float:left; top:@(y)px; left:@(x)px; position:absolute;margin: 0px;">
            </div>

            sumAngl = sumAngl + angle;
        }
    </div>
    @using (Ajax.BeginForm(
        (isTemporary ? "UpdateTempItem" : "UpdateFloorItem"),
        "FloorItem",
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "{" +
                        "   console.log(data);" +
                        "   UpdateItemCounts(data.totalTables, data.totalMinCovers, data.totalMaxCovers);" +
                        "}"
        }))
    {
        @Html.HiddenFor(m => m.FloorTableId)
        @Html.HiddenFor(m => m.FloorPlanId)
        @Html.HiddenFor(m => m.SectionId)
        @Html.HiddenFor(m => m.TableName)
        @Html.HiddenFor(m => m.HtmlId)
        @Html.HiddenFor(m => m.Shape)
        @Html.HiddenFor(m => m.Size)
        @Html.HiddenFor(m => m.MinCover)
        @Html.HiddenFor(m => m.MaxCover)
        @Html.HiddenFor(m => m.Angle)
        @Html.HiddenFor(m => m.TTop)
        @Html.HiddenFor(m => m.TLeft)
    @Html.HiddenFor(m => m.SeatingPriority)
        @Html.Hidden("IsTemporary", (Model.IsTemporary.HasValue ? Model.IsTemporary.Value : false))
    }
    @if (isServerAvailable)
    {
        <span class="tooltip_time-p">
            <div class="arrow-down">
            </div>
            @(Model.FloorTableServer.Server.FirstName + " " + Model.FloorTableServer.Server.LastName)<br>
        </span>
    }
</div>
