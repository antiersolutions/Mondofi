@using AIS.Extensions;
@model AISModels.FloorPlan
@{
    var ResModel = (AIS.Models.ReservationVM)ViewBag.ResModel;
}
<div class="top-bar">
    <div style="float: left; margin-top: 8px; margin-left: 15px; width: auto;">
        TIME
    </div>
    <div id="slider" style="float: left; margin-top: 8px; margin-left: 15px; width: calc(100% - 289px);">
    </div>
    <div id="sldTime" style="background: none repeat scroll 0 0 #FFFFFF; float: left;
        margin-left: 12px; margin-top: 8px; padding: 3px; width: 53px;">
        TIME
    </div>
    <input id="countDownRef" type="button" value="0:00" title="Refresh" style="width: 62px; margin-left: 9px;
        margin-top: 8px; float: left; padding:0;" onclick="RefreshFloorTime();" />
    <input id="currentDateRef" type="button" value="Today" title="Today" style="width: 62px;
        margin-left: 9px; margin-top: 8px; float:left;" onclick="RefreshFloorDate();" />
</div>
<div class="top-bar" style="position: relative;">
    <div class="nav">
        <div id="topslider" class="slider">
            <ul>
                @foreach (var item in (IEnumerable<AISModels.FloorPlan>)ViewBag.Floors)
                {
                    <li>
                        <a class="@((item.FloorPlanId == Model.FloorPlanId) ? "active" : string.Empty)" href="javascript:void(0)">
                            <strong>L@(item.FLevel)-</strong>@item.FloorName
                        </a>
                        <input type="hidden" value="@item.FloorPlanId" />
                    </li>
                }
            </ul>
        </div>
        <div class="controls">
            <a href="#" class="prev-slide">Prev Slide</a> <a href="#" class="next-slide">Next Slide</a>
        </div>
    </div>
    <ul class="top-view-btn">
        <li>
            <input type="button" onclick="$('#tabWAITING').click();" style="width: auto; margin-right: 9px; margin-top: 8px;
                float: left; background-color:green; padding:0 4px;" title="Click here to see waitlist."
                   value="Waitlist: 0" id="waitListRef" />
        </li>
    </ul>
    <ul class="top-view-btn">
        <li class="toggle-btn"></li>
        <li class="full-screen-view"></li>
    </ul>
</div>
<div id="floorArea" class="table-flow" style="width: 100%; height: 768px; z-index: 1;">
    @if (ResModel != null && ResModel.ReservationId != 0)
    {
        var tt = DateTime.ParseExact(ResModel.time.Split('-')[0].Trim(), "ddMMyyyyhhmmtt", System.Globalization.CultureInfo.InvariantCulture);
        var daytime = tt.ToString("HH:mm");

        @Html.Action(
            "UpdateFloorPlanOnTimeSlide",
            "FloorPlan",
            new
            {
                date = (DateTime?)ResModel.resDate,
                shift = ResModel.ShiftId.ToString(),
                FloorPlanId = (long?)ResModel.FloorPlanId,
                time = daytime
            })
    }
    else if (ResModel != null && ResModel.resDate.Year == DateTime.UtcNow.ToDefaultTimeZone(User.Identity.GetDatabaseName()).Year && !string.IsNullOrEmpty(ResModel.time))
    {
        var tt = DateTime.ParseExact(ResModel.time.Split('-')[0].Trim(), "ddMMyyyyhhmmtt", System.Globalization.CultureInfo.InvariantCulture);
        var daytime = tt.TimeOfDay.Minutes;

        @Html.Action(
            "_FloorPlanPartial",
            "FloorPlan",
            new
            {
                startTime = (DateTime?)ResModel.resDate.AddMinutes(daytime),
                endTime = (DateTime?)ResModel.resDate.AddMinutes(daytime + 15),
                FloorPlanId = (long?)Model.FloorPlanId
            })
    }
    else
    {
        var d = DateTime.UtcNow.ToDefaultTimeZone(User.Identity.GetDatabaseName());
        var min = (-1) * (d.Minute % 15);
        d = d.AddMinutes(min);
        var daytime = d.ToString("HH:mm");

        @Html.Action(
            "UpdateFloorPlanOnTimeSlide",
            "FloorPlan",
            new
            {
                date = d.Date,
                time = daytime,
                FloorPlanId = (long?)Model.FloorPlanId
            })
    }
    @*else
        {
            @Html.Action(
                "_FloorPlanPartial",
                "FloorPlan",
                new
                {
                    startTime = DateTime.UtcNow.ToClientTime(),
                    endTime = DateTime.UtcNow.ToClientTime().AddMinutes(+15),
                    FloorPlanId = (long?)Model.FloorPlanId
                })
        }*@
</div>
