@model AISModels.FloorTable
@{
    var isTemp = (Model.IsTemporary.HasValue ? Model.IsTemporary.Value : false);

    var width = 0;
    var height = 0;
    var sideSeat = 0;
    var topSeat = 0;
    var bottomSeat = 0;
    var topbottomleftmargin = 0;
    var sidetopmargin = 0;

    var isSelected = ((ViewBag.IsSelected != null) ? (ViewBag.IsSelected) : false);
    var isTemporary = ((ViewBag.IsTemp != null) ? (ViewBag.IsTemp) : false);

    sideSeat = 0;
    topSeat = ((Model.MaxCover - (Model.MaxCover % 2)) / 2) + (Model.MaxCover % 2);
    bottomSeat = ((Model.MaxCover - (Model.MaxCover % 2)) / 2);
    width = (85 / 2) * topSeat;
    height = 55;
    topbottomleftmargin = (((width + 4) - 40) / (topSeat + bottomSeat));
    sidetopmargin = ((height - 20) / 2);
    
}
<div id="@(Model.HtmlId)" class="table-main table" style="left: @(Model.TLeft); top: @(Model.TTop);">
    <div class="tblRotate" style="transform: rotate(@(Model.Angle)deg);">
        <div class="top-seat1">
            @for (var i = 0; i < topSeat; i++)
            {
                <div class="seat top-chair" style="float: left; margin-left: @((topbottomleftmargin == 0) ? "" : topbottomleftmargin.ToString())px;">
                </div>
            }
        </div>
        <div class="seat-mid-section">
            @if (sideSeat == 1)
            {
                <div class="seat l-seat left-chair" style="float:left;margin-top:@(sidetopmargin)px;">
                </div>
                <div onclick="EditTable(this);" class="quan-4-1 @(isSelected ? "secHover" : string.Empty)" style="position: relative;width:@(width)px; float:left;height: @(height)px; border:1px solid #979191;">
                    <div class="rotate" @(isSelected ? null : Html.Raw("style=\"display: none;\""))>
                        <a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateAnti"></a><a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateClock">
                        </a>
                    </div>
                    <h3>@(Model.TableName)</h3>
                    <p>@(Model.MinCover)/@(Model.MaxCover)</p>
                </div>
            }
            else if (sideSeat == 2)
            {
                <div class="seat l-seat left-chair" style="float: left; margin-top: @(sidetopmargin)px;">
                </div>
                <div onclick="EditTable(this);" class="quan-4-1 @(isSelected ? "secHover" : string.Empty)" style="position: relative;width:@(width)px; float:left;height: @(height)px; border:1px solid #979191;">
                    <div class="rotate" @(isSelected ? null : Html.Raw("style=\"display: none;\""))>
                        <a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateAnti"></a><a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateClock">
                        </a>
                    </div>
                    <h3>@(Model.TableName)</h3>
                    <p>@(Model.MinCover)/@(Model.MaxCover)</p>
                </div>
                <div class="seat r-seat right-chair" style="float: right; margin-top: @(sidetopmargin)px;">
                </div>
            }
            else
            {
                <div onclick="EditTable(this);" class="quan-4-1 @(isSelected ? "secHover" : string.Empty)" style="position: relative;width:@(width)px; float:left;height: @(height)px; border:1px solid #979191;">
                    <div class="rotate" @(isSelected ? null : Html.Raw("style=\"display: none;\""))>
                        <a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateAnti"></a><a title="@(Model.HtmlId)" href="javascript:void(0);" class="rotateClock">
                        </a>
                    </div>
                    <h3>@(Model.TableName)</h3>
                    <p>@(Model.MinCover)/@(Model.MaxCover)</p>
                </div>
            }
        </div>
        <div class="bottom-seat1">
            @for (var j = 0; j < bottomSeat; j++)
            {
                <div class="seat bottom-chair" style="float: left; margin-left: @((topbottomleftmargin == 0) ? "" : topbottomleftmargin.ToString())px;">
                </div>
            }
        </div>
    </div>
    @using (Ajax.BeginForm(
        (isTemp ? "AddMergedTable" : "UpdateMergedTable"),
        "MergeTable",
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "{" +
                        "   console.log(data);" +
                        "   if(data.Template != null) {" +
                        "       if(data.HtmlId != null) {" +
                        "           $('#' + data.HtmlId).remove();" +
                        "       }" +
                        "       $('#floorArea').append(data.Template);" +
                        "   }" +
                        "   " +
                        "   if(data.TablesToRemove != null) {" +
                        "       $('#' + data.TablesToRemove).remove();" +
                        "   }" +
                        "   $('#AdResSaveForm #MergeTableId').val(data.ItemId);" +
                        "}"
        }))
    {
        @Html.Hidden("MergedFloorTableId", Model.FloorTableId)
        @Html.HiddenFor(m => m.FloorPlanId)
        @Html.HiddenFor(m => m.TableName)
        @Html.HiddenFor(m => m.HtmlId)
        @Html.HiddenFor(m => m.Shape)
        @Html.HiddenFor(m => m.Size)
        @Html.HiddenFor(m => m.MinCover)
        @Html.HiddenFor(m => m.MaxCover)
        @Html.HiddenFor(m => m.Angle)
        @Html.HiddenFor(m => m.TTop)
        @Html.HiddenFor(m => m.TLeft)
        @Html.Hidden("IsTemporary", (Model.IsTemporary.HasValue ? Model.IsTemporary.Value : false))

        if (ViewBag.SelectedTables != null)
        {
            foreach (var value in (List<long>)ViewBag.SelectedTables)
            {
        @Html.Hidden("selectedTables", value)
            }
        }
    }
</div>
