@model IEnumerable<AIS.Models.AlphabeticalMapping<AIS.Models.UserProfile>>
 @using AIS;
@using Microsoft.AspNet.Identity;
@foreach (var oitem in Model)
{
    <div class="section-head">
        <p>
            @oitem.FirstLetter
        </p>
    </div>
    foreach (var item in oitem.Items)
    {

        using (var companyUserManger = AIS.ApplicationUserManager.Create(User.Identity.GetDatabaseName()))
        {
            var superuserrole = companyUserManger.IsInRole(item.Id, "SuperAdmin");
            var userrole = companyUserManger.IsInRole(item.Id, "Admin");
      

        <ul class="people-status">
            <li id="@item.Id">
                @if (item.Availability == null || item.Availability == false)
                {
                    <img src="/images/none-icon.png" alt="" />
                }
                else
                {
                    <img src="/images/available-icon.png" alt="" />
                }
                <h1 style="text-align: left;">
                    @item.LastName, @(item.FirstName)@((item.Designation != null) ? Html.Raw("<font size='3' weight='lighter' style='color: #888'>-" + item.Designation.Desgination + "</font>") : null)
                    @if (userrole==true || superuserrole==true)
                    {
                        <img style="width: 20px; float: right" src="/images/s-rating-pro.png" alt="" />
                    }<br />
                    <span style="width: 233px; word-wrap: normal;">
                        @{
                    var stringBuilder = new System.Text.StringBuilder();

                    foreach (var phone in item.PhoneNumbers.ToList())
                    {
                        stringBuilder.AppendFormat("{0}, ", Convert.ToInt64(phone.PhoneNumber.Replace(" ", string.Empty)).ToString("000'-'000'-'0000"));
                    }

                    if (stringBuilder.Length > 2)
                    {
                        stringBuilder.Length -= 2;
                    }
                        }
                        @Html.Raw(stringBuilder.ToString())
                    </span>
                </h1>
            </li>
        </ul>
}
    }
}

