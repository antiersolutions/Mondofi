@using AIS.Extensions;
@model AISModels.Customers
@{
    ViewBag.Title = "Details";    
}
<style>
    .saveBtn
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #E8867C;
        border-radius: 5px;
        color: #373A42;
        cursor: pointer;
        float: right;
        font-family: 'Lato' ,sans-serif;
        font-size: 16px;
        font-weight: 500;
        margin-right: 12px;
        padding: 4px 12px 5px;
        transition: all 0.3s ease-out 0s;
    }
    .new-pro-pic
    {
        height: 120px;
        margin: 5px;
        width: 120px;
    }
    .profile a.make-reser
    {
        background: none repeat scroll 0 0 #E8867C;
        border: medium none;
        border-radius: 5px;
        color: #FFFFFF;
        cursor: pointer;
        font-family: 'Lato' ,sans-serif;
        font-size: 14px;
        font-weight: 500;
        line-height: 22px;
        margin-top: 6px;
        padding: 6px 4px;
        text-decoration: none;
    }
</style>
<div class="profile content_1">
    <div class="section-l-img">
        <div>
            @if (Model.PhotoPath != null)
            {
                <img class="new-pro-pic" src="@Model.PhotoPath" alt=""/>
            }
            else
            {
                <img class="new-pro-pic" src="../../Images/pro-pic.png" alt="" />
            }
        </div>
        @Html.ActionLink("Make Reservation", "FloorPlan", "FloorPlan", new AIS.Models.ReservationVM { resDate = DateTime.UtcNow.ToClientTime().Date, FirstName = Model.FirstName, LastName = Model.LastName, Email = (Model.Emails.Count == 0 ? null : Model.Emails.FirstOrDefault().Email), MobileNumber = (Model.PhoneNumbers.Count == 0 ? null : Model.PhoneNumbers.FirstOrDefault().PhoneNumbers) }, new { @class = "make-reser" })
    </div>
    <div class="section-r-info">
        <h1>@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</h1>
        <p>
            Mobile</p>
        <h5>
            @{
                var sbuilder = new System.Text.StringBuilder();
                foreach (var p in Model.PhoneNumbers.ToList())
                {
                    sbuilder.AppendFormat("{0},", Convert.ToInt64(p.PhoneNumbers.Replace(" ", string.Empty)).ToString("000'-'000'-'0000"));
                }
                if (sbuilder.Length > 2)
                {
                    sbuilder.Length -= 1;
                }
            }
            @Html.Raw(sbuilder.ToString())
        </h5>
        @if (Model.Emails != null && Model.Emails.Count() > 0)
        {
            <p>
                Email</p>
            <h5>
                @{
            var stringbuilder = new System.Text.StringBuilder();
            foreach (var eml in Model.Emails.ToList())
            {
                stringbuilder.AppendFormat("{0},", eml.Email);
            }
            if (stringbuilder.Length > 2)
            {
                stringbuilder.Length -= 1;
            }
                }
                @Html.Raw(stringbuilder.ToString())
            </h5>
        }
        @{
            int totalVisits;
            int totalReservations;
            int walkins;
            int noshows;
            int cancellations;

            Model.GetCustomerVisits(out totalVisits, out totalReservations, out walkins, out noshows, out cancellations);
        }
        <ul class="visit-info">
            <li>Total visits<br>
                <span>@totalVisits</span></li>
            <li>Reservations<br>
                <span>@totalReservations</span></li>
            <li>Walk-ins<br>
                <span>@walkins</span></li>
            <li>No-Shows<br>
                <span>@noshows</span></li>
            <li>Cancellations<br>
                <span>@cancellations</span></li>
        </ul>
        @if (Model.Allergies.Count() > 0)
        {
            <div class="special-status">
                <p>
                    Special Status</p>
                @foreach (var item in Model.SpecialStatus)
                {
                    <input class="vip-btn" type="button" value="@item.SpecialStatus.Status" name=""/>  
                }
            </div>
        }
        @if (Model.Allergies.Count() > 0)
        {
            <div class="allergies">
                <p>
                    Allergies</p>
                @foreach (var item in Model.Allergies)
                {
                    <input type="button" value="@item.Allergies.Allergy" name=""/>
                }
            </div>
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        $("#delCustomer").click(function () {
            if (confirm("Do you want to delete customer?")) {
                $.ajax({
                    type: 'POST',
                    url: '/Customer/DeleteConfirmed/' + id,
                    success: function (myData) {
                        if (myData) {
                            alert("User deleted successfully.");
                            window.location.reload();
                        }
                        else {
                            alert("An error occured while deleting user, Please try again later.");
                        }
                    }

                })
            }
        });
    });
    var id = "";
    function deletecustomer(idd) {
        id = idd;
    }   
</script>
