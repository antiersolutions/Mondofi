@model AISModels.Reservation
@{
    ViewBag.Title = "Reservation Edit";
    Layout = "~/Views/Shared/_LayoutBase.cshtml";
}
@section styles
{
    <link href="../../Content/themes/base/jquery.ui.datepicker.css" rel="stylesheet"
        type="text/css" />
    <style type="text/css">
        .hasDatepicker
        {
            margin-left: -20px;
            position: relative;
            width: 16px;
            border: 0 none;
        }
        
        .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default
        {
            color: #555555;
            font-weight: normal;
        }
        .ui-datepicker .ui-datepicker-header
        {
            padding: 0.2em 0;
            position: relative;
        }
        
        
        .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default
        {
            background: url("/images/ui-bg_glass_75_e6e6e6_1x400.png") repeat-x scroll 50% 50% #E6E6E6;
            color: #555555;
            font-weight: normal;
        }
        .ui-datepicker td span, .ui-datepicker td a
        {
            display: block;
            padding: 0.2em;
            text-align: right;
            text-decoration: none;
        }
        .ui-datepicker.ui-widget.ui-widget-content.ui-helper-clearfix.ui-corner-all
        {
            border: 1px solid #AAAAAA;
            color: #222222;
            background: #FFFFFF;
            margin-top: 3px;
            border-radius: 5px;
        }
        
        .secHover
        {
            background: #0489B1 !important;
            border: 1px solid #FF0000 !important;
            transition: none;
        }
        .settings .menu-bar
        {
            z-index: 9 !important;
        }
        .quan-2-other1 h3, .quan-2-1 h3, .quan-4-1 h3
        {
            color: #3D3D3D;
            float: left;
            font-family: 'Lato' ,sans-serif;
            font-size: 14px;
            font-weight: 700;
            padding: 6px 0 0 6px;
            width: auto;
        }
        
        .floor .table-main h3.quan-2-h
        {
            color: #3D3D3D;
            float: none;
            font-family: 'Lato' ,sans-serif;
            font-size: 14px;
            font-weight: 700;
            padding: 6px 0 0;
        }
        
        .floor .table-main p
        {
            bottom: 5px;
            color: #878787;
            float: left;
            font-family: 'Lato' ,sans-serif;
            font-size: 14px;
            font-weight: 700;
            padding: 2px 0 0 14px;
            position: absolute;
            right: 5px;
            text-align: right;
            margin: 0;
        }
        
        .floor .table-main p.quan-2-p
        {
            bottom: 6px;
            color: #878787;
            float: left;
            font-family: 'Lato' ,sans-serif;
            font-size: 14px;
            font-weight: 700;
            position: absolute;
            right: 0;
            padding: 0;
            text-align: center;
            width: 100%;
            margin: 0;
        }
        
        /*
        img.table-img
        {
            position: absolute;
            right: 19px;
            top: 11px;
            z-index: 9;
        }
        */
        img.table-img
        {
            left: -12px;
            position: absolute;
            top: 34%;
            z-index: 9;
        }
        
        .pop-sec-btn input[type="submit"]
        {
            float: none;
            margin-right: inherit;
        }
        
        .frnt-right-popup
        {
            height: auto;
            right: 300px;
        }
        
        .mCSB_scrollTools
        {
            z-index: -1 !important;
        }
        
        .frnt-right-rowb .resInfo ul.reslist li p:nth-child(4)
        {
            text-align: center;
            width: 42px;
        }
    </style>
}
@section scripts
{
    <script type="text/javascript" src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
    <script type="text/javascript">


        $(document).ready(function () {



            $("#tabs").tabs();

            $(".wrapper").addClass('wrapper-floor');
            var className = $('.middle-section').attr('class');
            console.log(className);
            if (className == "middle-section floor middle-section-toggle2 middle-section-toggle1" || className == "middle-section floor middle-section-toggle1 middle-section-toggle2") {
                $(".middle-section").addClass("middle-section-view");
            }
            else {
                $(".middle-section").removeClass("middle-section-view");
            }

            $('.m-left-btn').click(function () {
                $('.menu-bar').toggleClass('menu-bar-toggle');
                $('.m-left-btn').toggleClass('m-left-btn-toggle');
                $('.middle-section').toggleClass('middle-section-toggle1');

                var className = $('.middle-section').attr('class');
                console.log(className);
                if (className == "middle-section floor middle-section-toggle2 middle-section-toggle1" || className == "middle-section floor middle-section-toggle1 middle-section-toggle2") {
                    $(".middle-section").addClass("middle-section-view");
                }
                else {
                    $(".middle-section").removeClass("middle-section-view");
                }
            });

            $('.m-right-btn').click(function () {
                $('.manage-section').toggleClass('manage-section-toggle');
                $('.m-right-btn').toggleClass('m-right-btn-toggle');
                $('.middle-section').toggleClass('middle-section-toggle2');

                var className = $('.middle-section').attr('class');
                console.log(className);
                if (className == "middle-section floor middle-section-toggle2 middle-section-toggle1" || className == "middle-section floor middle-section-toggle1 middle-section-toggle2") {
                    $(".middle-section").addClass("middle-section-view");
                }
                else {
                    $(".middle-section").removeClass("middle-section-view");
                }
            });
            $('.full-screen-view').click(function () {
                $('.menu-bar').toggleClass('menu-bar-toggle');
                $('.m-left-btn').toggleClass('m-left-btn-toggle');
                $('.middle-section').toggleClass('middle-section-toggle1');
                $('.full-screen-view').toggleClass('normal-view');
                $('.manage-section').toggleClass('manage-section-toggle');
                $('.m-right-btn').toggleClass('m-right-btn-toggle');
                $('.middle-section').toggleClass('middle-section-toggle2');
                $('.middle-section').toggleClass('middle-section-view');
            });

            // Iterate over each select element
            $('select').each(function () {

                // Cache the number of options
                var $this = $(this);
                numberOfOptions = $(this).children('option').length;

                // Hides the select element
                $this.addClass('s-hidden');

                // Wrap the select element in a div
                $this.wrap('<div class="select"></div>');

                // Insert a styled div to sit over the top of the hidden select element
                $this.after('<div class="styledSelect"></div>');

                // Cache the styled div
                var $styledSelect = $this.next('div.styledSelect');

                // Show the first select option in the styled div
                $styledSelect.text($this.children('option').eq(0).text());

                // Insert an unordered list after the styled div and also cache the list
                var $list = $('<ul />', {
                    'class': 'options'
                }).insertAfter($styledSelect);

                // Insert a list item into the unordered list for each select option
                for (var i = 0; i < numberOfOptions; i++) {
                    $('<li />', {
                        text: $this.children('option').eq(i).text(),
                        rel: $this.children('option').eq(i).val()
                    }).appendTo($list);
                }

                // Cache the list items
                var $listItems = $list.children('li');

                // Show the unordered list when the styled div is clicked (also hides it if the div is clicked again)
                $styledSelect.click(function (e) {
                    e.stopPropagation();
                    $('div.styledSelect.active').each(function () {
                        $(this).removeClass('active').next('ul.options').hide();
                    });
                    $(this).toggleClass('active').next('ul.options').toggle();
                });

                // Hides the unordered list when a list item is clicked and updates the styled div to show the selected list item
                // Updates the select element to have the value of the equivalent option
                $listItems.click(function (e) {
                    e.stopPropagation();
                    $styledSelect.text($(this).text()).removeClass('active');
                    $this.val($(this).attr('rel'));
                    $list.hide();
                    /* alert($this.val()); Uncomment this for demonstration! */
                });
                // Hides the unordered list when clicking outside of it
                $(document).click(function () {
                    $styledSelect.removeClass('active');
                    $list.hide();
                });
            });
            $(".listaMg").als({
                visible_items: 7,
                scrolling_items: 1,
                orientation: "horizontal",
                circular: "yes",
                autoscroll: "no",
                interval: 5000,
                direction: "right",
                start_from: 5
            });
            $("ul.reslist li").hover(function (e) {
                $(".frnt-right-popup").toggleClass("df")
            });

            $(".shiftStatus ul li").each(function (a, p) {
                if ($(p).text() == "@ViewBag.shifttxt") {
                    $(p).click();
                }
            });

            SetRotateToFloorItems();

        });
        function SetRotateToFloorItems() {
            $('.table').each(function (index, element) {

                if ($(this).parents('.c-container').length > 0) {
                    var angle = $(this).parents('.table-main').find('#Angle').val();
                    $(this).parents('.table-main').css({
                        '-moz-transform': 'rotate(' + (angle) + 'deg)',
                        '-webkit-transform': 'rotate(' + (angle) + 'deg)',
                        '-o-transform': 'rotate(' + (angle) + 'deg)',
                        '-ms-transform': 'rotate(' + (angle) + 'deg)'
                    });

                    SetRotateToTableSeats(this);
                }
                else {
                    var angle = $(this).find('#Angle').val();
                    $(this).css({
                        '-moz-transform': 'rotate(' + (angle) + 'deg)',
                        '-webkit-transform': 'rotate(' + (angle) + 'deg)',
                        '-o-transform': 'rotate(' + (angle) + 'deg)',
                        '-ms-transform': 'rotate(' + (angle) + 'deg)'
                    });
                }
            });
        }

        function SetRotateToTableSeats(table) {
            //debugger;
            var seatCount = $(table).parents('.table-main').find('.seat').length;
            var angle = (360 / seatCount);
            var sumAngl = 0;

            for (var n = 0; n < seatCount; n++) {

                $(table).parents('.table-main').find(".seat" + n).css({
                    '-moz-transform': 'rotate(' + (sumAngl) + 'deg)',
                    '-webkit-transform': 'rotate(' + (sumAngl) + 'deg)',
                    '-o-transform': 'rotate(' + (sumAngl) + 'deg)',
                    '-ms-transform': 'rotate(' + (sumAngl) + 'deg)'
                });

                sumAngl = sumAngl + angle;
            }
        }
    </script>
    <script type="text/javascript" src="/js/jquery.als-1.2.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#udate").datepicker({
                dateFormat: 'd D, MM yy'
            }).datepicker('setDate', '@(Model.ReservationDate.ToString("dd ddd, MMMM yyyy"))');



            $("#cdate").datepicker({
                dateFormat: 'DD, d M, y'
            }).datepicker('setDate', '@(Model.ReservationDate.ToString("dddd, dd MMM, yy"))');


            e = $("#cdate").val();
            var da = e.replace(',', '').split(' ');
            $(".date").text(da[1]);
            $(".day").text(da[0].substring(0, 3));
            $(".month").text(da[2]);


            $.ajax({
                data: { date: $("#cdate").val(), FloorPlanId: '@Model.FloorPlanId', shift: $("#shift").next().text() },
                url: '/Floor/GetCoversAndShiftTime',
                async: false,
                success: function (data) {
                    $("#open").html('');
                    $("#open").append($("<option></option>").val('').html('-Select-'));
                    $.each(data.ttime, function (b, z) {
                        $("#open").append($("<option></option>").val(z.Value).html(z.Text));
                    });

                    //code for bind additonal info dropdown list
                    bindTimedllForAddiInfo(data);

                    $.ajax({
                        data: { date: $("#cdate").val(), FloorPlanId: '@Model.FloorPlanId', shift: $("#shift").next().text(), time: '@ViewBag.datetime', tableId: '@Model.FloorTableId' },
                        url: '/Floor/getTables',
                        async: false,
                        success: function (data) {
                            $('#tcount').text(data.length + " tables ");
                            $("#restable").html('');
                            $("#utable").html('');

                            $.each(data, function (p, a) {
                                $("#restable").append($("<option></option>").val(a.id).html(a.name));
                                $("#utable").append($("<option></option>").val(a.id).html(a.name));
                            });

                            $("#restable").val(@Model.FloorTableId);
                            BindSelectDesignForAddInfo("#uTableDiv");
                            tableClickEventBind();
                        }
                    });
                    $(".covStatus .sc").text(data.Count);
                },
                complete: function () {
                    var aa = "@ViewBag.datetime";
                    $("#open").val(aa);
                }
            });

        });


        function tableClickEventBind() {
            $("#uTableDiv ul li").each(function (a, p) {
                if ($(p).text() == $("#restable option:selected").text()) {
                    $(p).click();
                }
            });
            $("#uTableDiv li").click(function (e) {
                $("#restable").val($(e.currentTarget).attr("rel"));
            });
        }

        function validNumber(e) {
            if (e.shiftKey || e.ctrlKey || e.altKey) {
                e.preventDefault();
            } else {
                var key = e.keyCode;
                if (key != 9) {
                    if (!((key == 8) || (key == 46) || (key >= 35 && key <= 40) || (key >= 48 && key <= 57) || (key >= 96 && key <= 105))) {
                        e.preventDefault();
                    }
                }
            }
        }

        function getCoversAndTime() {
            if ($("#cdate").val() != "" && $("#cdate").val() != undefined && '@Model.FloorPlanId' != "" && $("#shift").next().text() != "" && $("#shift").next().text() != undefined) {
                $.ajax({
                    data: { date: $("#cdate").val(), FloorPlanId: '@Model.FloorPlanId', shift: $("#shift").next().text() },
                    url: '/Floor/GetCoversAndShiftTime',
                    success: function (data) {
                        $("#open").html('');
                        $("#utime").html('');

                        $.each(data.ttime, function (b, z) {
                            $("#open").append($("<option></option>").val(z.Value).html(z.Text));
                            $("#utime").append($("<option></option>").val(z.Value).html(z.Text));
                        });
                        BindSelectDesignForAddInfo("#utimeDiv");
                        
                        getTable();
                        $(".covStatus .sc").text(data.Count);
                    }
                });
            }
        }

        //get tables Based On date Shift
        function getTable() {
            $("#utimeDiv ul li").each(function (a, p) {
                if ($("#utimeDiv div.styledSelect").text() != $("#open option:selected").text()) {
                    if ($(p).text() == $("#open option:selected").text()) {
                        $(p).click();
                    }
                }
            });
            if ($("#cdate").val() != "" && '@Model.FloorPlanId' != "" && $("#shift").next().text() != "" && $('#open :selected').val() != "" && $('#open :selected').val() != null) {
                $.ajax({
                    data: { date: $("#cdate").val(), FloorPlanId: '@Model.FloorPlanId', shift: $("#shift").next().text(), time: $('#open :selected').val(), tableId: '@Model.FloorTableId', duration: $("#udurationDiv div.styledSelect").text() },
                    url: '/Floor/getTables',
                    success: function (data) {
                        $('#tcount').text(data.length + " tables ");
                        $("#restable").html('');
                        $("#utable").html('');

                        $.each(data, function (p, a) {
                            $("#restable").append($("<option></option>").val(a.id).html(a.name));
                            $("#utable").append($("<option></option>").val(a.id).html(a.name));
                        });
                        BindSelectDesignForAddInfo("#uTableDiv");
                        tableClickEventBind();
                    }
                });
            }
        }
        function save() {
            $("#ShiftId").val($("#shift").val());
            $("#resDate").val($("#cdate").val());
            $("#tableIdd").val($("#restable").val());
            
            $("#time").val($("#open").val());

            $("#Status").val($("#uStatus .styledSelect").text())
            $("#Duration").val($("#udurationDiv .styledSelect").text())


            $("#TablePositionLeft").val($(".table-main #FloorTableId[value='" + ($("#tableIdd").val()) + "']").parents('.table-main').css('left'));
            $("#TablePositionTop").val($(".table-main #FloorTableId[value='" + ($("#tableIdd").val()) + "']").parents('.table-main').css('top'));

            if ($("#time").val()=="") 
            {
            alert("Please select Time.");
            }

            $("#editForm").submit();
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var t = setInterval(function () { $('#floorArea').load('@Url.Action("_FloorPlanPartial", "Floor")'); }, 60000);

            //************ Drag & Drop tables on floor *************//

            $("#floorArea").droppable();

            $("#floorArea .table-main").live('mouseover', function () {
                $(this).draggable({
                    containment: '#floorArea'
                    //stop: function (ev, ui) {
                    //    clearInterval(t);
                    //}
                });
            });

            //*************  *****************//
            $("#floorArea .quan-2-other1,.quan-2-1,.quan-4-1").live('click', function () {
                $(".quan-2-other1,.quan-2-1,.quan-4-1").removeClass("secHover");
                $(this).addClass("secHover");
                clearInterval(t);
                //$(this).parents(".table-main").find(".rotate").show();

            });

            $("#floorArea").live('dblclick', function () {
                $(".seat,.quan-2-other1,.quan-2-1,.quan-4-1,.item img").removeClass("secHover");
                //$('.table-tabs .nav-m ul.main li:first-child a').click();
                //ClearEditPanel();
            });

            $('.dateStatus').click(function () {
                $('#cdate').datepicker("show");
            });
        });
        function success(data) {
            if (data.result) {
                alert(data.msz)
                window.location = "/Calendar/Weeks";
            } else {
                alert(data.msz);
            }
        }
    </script>
    <script type="text/javascript">
        $(function () {
            $("#ushiftDiv li").click(function (e) {
                if ($("#editmainResShift div.styledSelect").text() != $(e.currentTarget).text()) {
                    $("#editmainResShift li").each(function (s, r) {
                        if ($(r).text() == $(e.currentTarget).text()) {
                            $(r).click();
                        }
                    });
                }
            });

            $("#uStatus ul li").each(function (a, p) {
                if ($(p).text() == '@(Model.Status == null ? null : Model.Status.StatusName)') {
                    $(p).click();
                }
            });



            $(".uCoversDiv ul li").each(function (a, p) {
                if ($(p).text() == '@Model.Covers') {
                    $(p).click();
                }
            });

            $(".uCoversDiv ul li").click(function (e) {
                $("#Covers").val($(e.currentTarget).text());
            });

            $("#Covers").change(function (e) {
                $(".uCoversDiv ul li").each(function (a, p) {
                    if ($(p).text() == $("#Covers").val()) {
                        $(p).click();
                    }
                });
            });

            $("#utimeDiv ul li").each(function (a, p) {
                if ($(p).text() == '@Model.TimeForm.ToString("hh:mm tt")') {
                    $(p).click();
                }
            });

            $("#utimeDiv li").click(function (e) {
                $("#open").val($(e.currentTarget).attr("rel"));
                $("#open").change();
            })


            $("#udurationDiv ul li").each(function (a, p) {
                if ($(p).text() == "@Model.Duration") {
                    $(p).click();
                }
            });


            $("#udurationDiv li").click(function (e) {
                getTable();
            });


            $("#uStatus li").click(function (e) {
                if ($(e.currentTarget).text() == "Confirmed") {
                    $("#uStatus img").attr("src", "/images/confirmed.png")
                } else {
                    $("#uStatus img").attr("src", "/images/not-confirmed.png")
                }
            });

            $("#ushiftDiv ul li").each(function (a, p) {
                if ($(p).text() == "@ViewBag.shifttxt") {
                    $(p).click();
                }
            });
            $("#editmainResShift li").click(function (e) {
                if ($("#ushiftDiv div.styledSelect").text() != $(e.currentTarget).text()) {
                    $("#ushiftDiv ul li").each(function (a, p) {
                        if ($(p).text() == $(e.currentTarget).text()) {
                            $(p).click();
                        }
                    })
                }
                getCoversAndTime();
            });
        })
        function BindSelectDesignForAddInfo(selector) {
            // Iterate over each select element
            $(selector).find('.styledSelect').remove();

            $(selector).find('select').each(function () {

                // Cache the number of options
                var $this = $(this);
                numberOfOptions = $(this).children('option').length;

                //Remove the previous design
                $this.parent().replaceWith($this);

                // Hides the select element
                $this.addClass('s-hidden');

                // Wrap the select element in a div
                $this.wrap('<div class="select"></div>');

                // Insert a styled div to sit over the top of the hidden select element
                $this.after('<div class="styledSelect"></div>');

                // Cache the styled div
                var $styledSelect = $this.next('div.styledSelect');

                // Show the first select option in the styled div
                $styledSelect.text($this.children('option').eq(0).text());

                // Insert an unordered list after the styled div and also cache the list
                var $list = $('<ul />', {
                    'class': 'options'
                }).insertAfter($styledSelect);

                // Insert a list item into the unordered list for each select option
                for (var i = 0; i < numberOfOptions; i++) {
                    $('<li />', {
                        text: $this.children('option').eq(i).text(),
                        rel: $this.children('option').eq(i).val()
                    }).appendTo($list);
                }

                // Cache the list items
                var $listItems = $list.children('li');

                // Show the unordered list when the styled div is clicked (also hides it if the div is clicked again)
                $styledSelect.click(function (e) {
                    e.stopPropagation();
                    $('div.styledSelect.active').each(function () {
                        $(this).removeClass('active').next('ul.options').hide();
                    });
                    $(this).toggleClass('active').next('ul.options').toggle();
                });

                // Hides the unordered list when a list item is clicked and updates the styled div to show the selected list item
                // Updates the select element to have the value of the equivalent option
                $listItems.click(function (e) {
                    e.stopPropagation();
                    $styledSelect.text($(this).text()).removeClass('active');
                    $this.val($(this).attr('rel'));
                    $list.hide();
                    /* alert($this.val()); Uncomment this for demonstration! */
                });
            });
        }

        function bindTimedllForAddiInfo(data) {
            $("#utime").html('');
            $.each(data.ttime, function (b, z) {
                $("#utime").append($("<option></option>").val(z.Value).html(z.Text));
            });
            BindSelectDesignForAddInfo("#utimeDiv");
        }

        function setTable() {
            $("#uTableDiv li").each(function (a, p) {
                if ($("#uTableDiv div.styledSelect").text() != $(p).text()) {
                    if ($(p).text() == $("#restable option:selected").text()) {
                        $(p).click();
                    }
                }
            })
        }

        function setDateValue() {
            $('#cdate').val($.datepicker.formatDate('DD, d M, y', $('#udate').datepicker('getDate')));
            var da = $('#cdate').val().replace(',', '').split(' ');
            $(".date").text(da[1]);
            $(".day").text(da[0].substring(0, 3));
            $(".month").text(da[2]);
            $('#cdate').change();
        }

        function changeCdate(e) {
            $("#udate").val($.datepicker.formatDate('d D, MM yy', $('#cdate').datepicker('getDate')));

            e = $(e).val();
            var da = e.replace(',', '').split(' ');
            $(".date").text(da[1]);
            $(".day").text(da[0].substring(0, 3));
            $(".month").text(da[2]);
            $('#floorArea').load('@Url.Action("_FloorPlanPartial", "Floor")?startTime=' + da)
            getCoversAndTime();
        }

        function deleteReservation() {
            if (confirm("Are you sure you want to delete.")) {
                $.ajax({
                    data: { id: '@Model.ReservationId' },
                    url: '/Calendar/DeleteReservation',
                    success: function (data) {
                        if (data) {
                            alert("Success Fully deleted.");
                            window.history.back();
                        } else {
                            alert("Some error occur.");
                        }
                    }
                });
            }
        }

    </script>
}
<div class="middle-section floor">
    <div class="top-bar">
        <ul>
            <li><a class="active" href="javascript:void(0)">@Model.FloorPlan.FloorName</a> <span
                class="arrow_box1"></span></li>
        </ul>
        <ul class="top-view-btn">
            <li class="toggle-btn"></li>
            <li class="full-screen-view"></li>
        </ul>
    </div>
    <div id="floorArea" class="table-flow">
        @Html.Action("_FloorPlanPartial")
    </div>
</div>
<div class="manage-section">
    <div class="m-right-btn">
    </div>
    <div class="frnt-right-rowA">
        <ul class="frst">
            <li>
                <div class="dateStatus">
                    <span class="date"></span><span class="day"></span><span class="month"></span>
                    <input onchange="changeCdate(this)" type="text" id="cdate" style="background: #585F68;
                        color: #585F68;" />
                </div>
            </li>
            <li>
                <div id="editmainResShift" class="shiftStatus">
                    <span class="sft">Shift</span>
                    @Html.DropDownList("shift", (SelectList)ViewBag.shiftEditDdl, "All")
                </div>
            </li>
            <li>
                <div class="covStatus">
                    <span class="fs">Covers</span> <span class="sc"></span>
                </div>
            </li>
        </ul>
    </div>
    <div>
        <h1 class="add-new-reser form">
            Edit Reservation</h1>
        <div class="frnt-right-rowb reservation-tabs">
            <div id="tabs">
                <ul class="main">
                    <li><a href="#tabs-1">Booking Information</a></li>
                    <li><a href="#tabs-2">Additional Details</a></li>
                </ul>
                <div id="tabs-1">
                    <div class="t-inner content_1">
                        @using (Ajax.BeginForm("ReservationUpdate", "Floor", new AjaxOptions { OnSuccess = "success" }, new { id = "editForm" }))
                        {
                            @Html.Hidden("ReservationId", Model.ReservationId)
                            @Html.Hidden("resDate")
                            @Html.Hidden("ShiftId")
                            @Html.Hidden("time")
                            @Html.Hidden("tableIdd")
                            @Html.Hidden("Status")

                            @Html.HiddenFor(p => p.Duration)
                            
                            
                            
                            @Html.Hidden("TablePositionLeft")
                            @Html.Hidden("TablePositionTop")
                            <label>
                                First Name <span>*</span></label>
                            @Html.TextBox("FirstName", Model.Customers.FirstName, new { @readonly = "readonly" })                        
                            <label>
                                Last Name <span>*</span></label>                            
                            @Html.TextBox("LastName", Model.Customers.LastName, new { @readonly = "readonly" })
                            <label>
                                Mobile Phone Name <span>*</span></label>
                            @Html.TextBox("MobileNumber", Model.Customers.customerPhoneNumbers.FirstOrDefault().PhoneNumbers, new { @readonly = "readonly" })                        
                            <label>
                                Email <span></span>
                            </label>
                            @Html.TextBox("Email", (Model.Customers.customerEmails.Count() == 0 ? null : Model.Customers.customerEmails.FirstOrDefault().Email), new { @readonly = "readonly" })
                            <div class="row">
                                <div class="left-s">
                                    <label>
                                        Covers <span>*</span></label>
                                    <div class="select-main">
                                        @Html.DropDownList("Covers", new SelectList(new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }))
                                    </div>
                                </div>
                                <div class="right-s">
                                    <label>
                                        Start <span>*</span></label>
                                    <div class="select-main">
                                        <select id="open" onchange="getTable()">
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <label>
                                Table <span>*</span></label>
                            <div class="select-main s-table">
                                <select id="restable" onchange="setTable()">
                                </select>
                            </div>
                            <p>
                                There are <span id="tcount"></span>available for this time and group size (excluding
                                table combinations).</p>                        
                        }
                    </div>
                </div>
                <div id="tabs-2">
                    <div class="additional-info content_1">
                        <div class="pop-sec-a">
                            <div class="colA">
                                <img src="/images/icon-pop-name.png" /></div>
                            <div class="colB">
                                @(Model.Customers.FirstName + " " + Model.Customers.LastName)<br />
                                <span>@(Model.Customers.customerPhoneNumbers.FirstOrDefault().PhoneNumbers)</span></div>
                            <div class="colC">
                                <img src="/images/red-s.png" width="15" height="18" /></div>
                        </div>
                        <div class="pop-sec-b">
                            <span class="sebHd">Guest Notes @*<img src="/images/icon-note.png" width="12" height="12">*@</span>
                            <p>
                            </p>
                        </div>
                        <div class="pop-sec-b">
                            <span class="sebHd">Special Status</span>
                            @foreach (var it in @Model.Customers.customerSpecialStatus)
                            {
                                <a href="javascript:(void)" class="@(it.SpecialStatus.Status == "VIP" ? "btnvip" : "btnhip")">
                                    @it.SpecialStatus.Status</a>
                            }
                        </div>
                        <div class="pop-sec-b">
                            <span class="sebHd">Allergies</span>
                            @foreach (var al in @Model.Customers.customerAllergies)
                            {
                                <span class="alerg">@al.Allergies.Allergy</span>
                            }
                        </div>
                        <div class="pop-sec-c">
                            <div class="status" id="uStatus">
                                <div class="staIcon">
                                    <img src='/images/@(Model.StatusId == null ? "not-confirmed" : Model.Status.StatusName).png' width='39' height='39' />
                                </div>
                                <span class="sft">Status</span>
                                @Html.DropDownList("statustDl", (SelectList)ViewBag.statusddl)
                            </div>
                            <div class="status uCoversDiv" style="margin-left: 2px; border-bottom: 3px solid #a1d17a;">
                                <span class="sft">Covers</span>
                                @Html.DropDownList("uCovers", new SelectList(new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }))
                            </div>
                        </div>
                        <div class="pop-sec-d">
                            <div class="status">
                                <span class="sft">Date</span>
                                @Html.TextBox("udate", null, new { onChange = "setDateValue()" })
                            </div>
                        </div>
                        <div class="pop-sec-e">
                            <div class="status" id="ushiftDiv">
                                <span class="sft">Shift</span>
                                <select id="ushift">
                                    <option value="">Breakfast</option>
                                    <option value="">Brunch</option>
                                    <option value="">Lunch</option>
                                    <option value="">Dinner</option>
                                </select>
                            </div>
                        </div>
                        <div class="pop-sec-e">
                            <div class="status" id="udurationDiv">
                                <span class="sft">Duration</span>
                                <select id="uduration">
                                    <option value="">15MIN</option>
                                    <option value="">30MIN</option>
                                    <option value="">45MIN</option>
                                    <option value="">1HR</option>
                                    <option value="">1HR 30MIN</option>
                                    <option value="">2HR</option>
                                    <option value="">2HR 30MIN</option>
                                    <option value="">3HR</option>
                                    <option value="">3HR 30MIN</option>
                                    <option value="">4HR</option>
                                </select>
                            </div>
                        </div>
                        <div class="pop-sec-e">
                            <div class="status" id="utimeDiv">
                                <span class="sft">Time</span>
                                <select id="utime">
                                    <option value="">Select</option>
                                </select>
                            </div>
                        </div>
                        <div class="pop-sec-e">
                            <div class="status" id="uTableDiv">
                                <span class="sft">Table</span>
                                <select id="utable">
                                    <option value="">Select</option>
                                </select>
                            </div>
                        </div>
                        <div class="pop-sec-b">
                            <span class="sebHd">Reservation Notes @*<img width="12" height="12" src="/images/icon-note.png">*@</span>
                            <p>
                            </p>
                        </div>
                        <div class="pop-sec-btn">
                            <input type="submit" value="save" onclick="save()">
                            <input type="submit" value="Delete this Reservation" onclick="deleteReservation()">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="t-bottom">
        <input type="button" value="Save" onclick="save()" />
        <input type="button" onclick="javascript:window.location.href='/Floor/FloorPlan'"
            value="Cancel" />
    </div>
</div>
