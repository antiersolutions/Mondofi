@model AIS.Models.TableDesignVM
@{
    var side = 0;
    var sidemargin = 0;
    var leftSeat = 0;
    var rightSeat = 0;
    var topSeat = 0;
    var bottomSeat = 0;

    switch (Model.Size.ToLower())
    {

        case "small":
            {
                side = 35;
                sidemargin = ((37 - 20) / 2);
                topSeat = 1;
                bottomSeat = 1;
                break;
            }
        case "medium":
            {
                side = 55;
                sidemargin = ((57 - 20) / 2);
                topSeat = 1;
                bottomSeat = 1;
                rightSeat = 1;
                leftSeat = 1;
                break;
            }
        case "large":
            {
                side = 75;
                sidemargin = ((77 - 20) / 2);
                topSeat = 1;
                bottomSeat = 1;
                rightSeat = 1;
                leftSeat = 1;
                break;
            }
        default:
            break;

    }

    
}
<div id="table@(Model.UniqueId)" class="table-main">
    <div class="top-seat1">
        @for (int i = 0; i < topSeat; i++)
        {
            <div class="seat top-chair" style="float: left; margin-left: @(sidemargin)px;">
            </div>
        }
    </div>
    <div class="seat-mid-section">
        <div class="left-seats-sec" style="float: left;">
            @for (var k = 0; k < leftSeat; k++)
            {
                <div class="seat left-chair" style="display: block; clear: both; margin-top: @(sidemargin)px;">
                </div>
            }
        </div>
        <div onclick="EditTable(this);" class="quan-2-other1" style="position: relative;
            width: @(side)px; float: left; height: @(side)px; border: 1px solid #979191;">
            <div class="rotate" style="display: none;">
                <a title="table@(Model.UniqueId)" href="javascript:void(0);" class="rotateAnti">
                </a><a title="table@(Model.UniqueId)" href="javascript:void(0);" class="rotateClock">
                </a>
            </div>
            <h3>@(Model.TableName)</h3>
            <p>@(Model.MinCover)/@(Model.MaxCover)</p>
        </div>
        <div class="right-seats-sec" style="float: right;">
            @for (var m = 0; m < rightSeat; m++)
            {
                <div class="seat right-chair" style="display: block; clear: both; margin-top: @(sidemargin)px;">
                </div>
            }
        </div>
    </div>
    <div class="bottom-seat1">
        @for (var j = 0; j < bottomSeat; j++)
        {
            <div class="seat bottom-chair" style="float: left; margin-left: @(sidemargin)px;">
            </div>
        }
    </div>
    <input type="hidden" value="@((Model.TempFloorTableId == 0) ? "" : Model.TempFloorTableId.ToString())" name="TempFloorTableId" id="TempFloorTableId" />
    <input type="hidden" value="@(Model.TableName)" name="tblname" id="tblname" />
    <input type="hidden" value="@(Model.Shape)" name="tbldesign" id="tbldesign" />
    <input type="hidden" value="@(Model.Angle)" name="tblangle" id="tblangle" />
    <input type="hidden" value="@(Model.MinCover)" name="tblmincover" id="tblmincover" />
    <input type="hidden" value="@(Model.MaxCover)" name="tblmaxcover" id="tblmaxcover"/>
    <input type="hidden" value="@((Model.FloorTableId == 0) ? "" : Model.FloorTableId.ToString())" name="FloorTableId" id="FloorTableId" />
</div>
